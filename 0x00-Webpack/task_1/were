Usage: webpack [entries...] [options]
Alternative usage to run commands: webpack [command] [options]

The build tool for modern web applications.

Options:
  -c, --config <pathToConfigFile...>                                                 Provide path to one or more webpack configuration files to process, e.g. "./webpack.config.js".
  --config-name <name...>                                                            Name(s) of particular configuration(s) to use if configuration file exports an array of multiple configurations.
  -m, --merge                                                                        Merge two or more configurations using 'webpack-merge'.
  --disable-interpret                                                                Disable interpret for loading the config file.
  --env <value...>                                                                   Environment variables passed to the configuration when it is a function, e.g. "myvar" or "myvar=myval".
  --node-env <value>                                                                 Sets process.env.NODE_ENV to the specified value.
  --define-process-env-node-env <value>                                              Sets process.env.NODE_ENV to the specified value. (Currently an alias for `--node-env`).
  --analyze                                                                          It invokes webpack-bundle-analyzer plugin to get bundle information.
  --progress [value]                                                                 Print compilation progress during build.
  -j, --json [pathToJsonFile]                                                        Prints result as JSON or store it in a file.
  --fail-on-warnings                                                                 Stop webpack-cli process with non-zero exit code on warnings from webpack.
  -e, --extends <value...>                                                           Path to the configuration to be extended (only works when using webpack-cli).
  --no-amd                                                                           Negative 'amd' option.
  --bail                                                                             Report the first error as a hard error instead of tolerating it.
  --no-bail                                                                          Negative 'bail' option.
  --cache                                                                            Enable in memory caching. Disable caching.
  --no-cache                                                                         Negative 'cache' option.
  --cache-cache-unaffected                                                           Additionally cache computation of modules that are unchanged and reference only unchanged modules.
  --no-cache-cache-unaffected                                                        Negative 'cache-cache-unaffected' option.
  --cache-max-generations <value>                                                    Number of generations unused cache entries stay in memory cache at minimum (1 = may be removed after unused for a single compilation, ..., Infinity: kept forever).
  --cache-type <value>                                                               In memory caching. Filesystem caching.
  --cache-allow-collecting-memory                                                    Allows to collect unused memory allocated during deserialization. This requires copying data into smaller buffers and has a performance cost.
  --no-cache-allow-collecting-memory                                                 Negative 'cache-allow-collecting-memory' option.
  --cache-cache-directory <value>                                                    Base directory for the cache (defaults to node_modules/.cache/webpack).
  --cache-cache-location <value>                                                     Locations for the cache (defaults to cacheDirectory / name).
  --cache-compression <value>                                                        Compression type used for the cache files.
  --no-cache-compression                                                             Negative 'cache-compression' option.
  --cache-hash-algorithm <value>                                                     Algorithm used for generation the hash (see node.js crypto package).
  --cache-idle-timeout <value>                                                       Time in ms after which idle period the cache storing should happen.
  --cache-idle-timeout-after-large-changes <value>                                   Time in ms after which idle period the cache storing should happen when larger changes has been detected (cumulative build time > 2 x avg cache store time).
  --cache-idle-timeout-for-initial-store <value>                                     Time in ms after which idle period the initial cache storing should happen.
  --cache-immutable-paths <value...>                                                 A RegExp matching an immutable directory (usually a package manager cache directory, including the tailing slash) A path to an immutable directory (usually a package manager cache directory).
  --cache-immutable-paths-reset                                                      Clear all items provided in 'cache.immutablePaths' configuration. List of paths that are managed by a package manager and contain a version or hash in its path so all files are immutable.
  --cache-managed-paths <value...>                                                   A RegExp matching a managed directory (usually a node_modules directory, including the tailing slash) A path to a managed directory (usually a node_modules directory).
  --cache-managed-paths-reset                                                        Clear all items provided in 'cache.managedPaths' configuration. List of paths that are managed by a package manager and can be trusted to not be modified otherwise.
  --cache-max-age <value>                                                            Time for which unused cache entries stay in the filesystem cache at minimum (in milliseconds).
  --cache-max-memory-generations <value>                                             Number of generations unused cache entries stay in memory cache at minimum (0 = no memory cache used, 1 = may be removed after unused for a single compilation, ..., Infinity: kept forever). Cache entries will be deserialized from disk when removed from memory cache.
  --cache-memory-cache-unaffected                                                    Additionally cache computation of modules that are unchanged and reference only unchanged modules in memory.
  --no-cache-memory-cache-unaffected                                                 Negative 'cache-memory-cache-unaffected' option.
  --cache-name <value>                                                               Name for the cache. Different names will lead to different coexisting caches.
  --cache-profile                                                                    Track and log detailed timing information for individual cache items.
  --no-cache-profile                                                                 Negative 'cache-profile' option.
  --cache-readonly                                                                   Enable/disable readonly mode.
  --no-cache-readonly                                                                Negative 'cache-readonly' option.
  --cache-store <value>                                                              When to store data to the filesystem. (pack: Store data when compiler is idle in a single file).
  --cache-version <value>                                                            Version of the cache data. Different versions won't allow to reuse the cache and override existing content. Update the version when config changed in a way which doesn't allow to reuse cache. This will invalidate the cache.
  --context <value>                                                                  The base directory (absolute path!) for resolving the `entry` option. If `output.pathinfo` is set, the included pathinfo is shortened to this directory.
  --dependencies <value...>                                                          References to another configuration to depend on.
  --dependencies-reset                                                               Clear all items provided in 'dependencies' configuration. References to other configurations to depend on.
  --no-dev-server                                                                    Negative 'dev-server' option.
  -d, --devtool <value>                                                              A developer tool to enhance debugging (false | eval | [inline-|hidden-|eval-][nosources-][cheap-[module-]]source-map).
  --no-devtool                                                                       Negative 'devtool' option.
  --entry <value...>                                                                 A module that is loaded upon startup. Only the last one is exported.
  --entry-reset                                                                      Clear all items provided in 'entry' configuration. All modules are loaded upon startup. The last one is exported.
  --experiments-async-web-assembly                                                   Support WebAssembly as asynchronous EcmaScript Module.
  --no-experiments-async-web-assembly                                                Negative 'experiments-async-web-assembly' option.
  --experiments-back-compat                                                          Enable backward-compat layer with deprecation warnings for many webpack 4 APIs.
  --no-experiments-back-compat                                                       Negative 'experiments-back-compat' option.
  --experiments-build-http-allowed-uris <value...>                                   Allowed URI pattern. Allowed URI (resp. the beginning of it).
  --experiments-build-http-allowed-uris-reset                                        Clear all items provided in 'experiments.buildHttp.allowedUris' configuration. List of allowed URIs (resp. the beginning of them).
  --experiments-build-http-cache-location <value>                                    Location where resource content is stored for lockfile entries. It's also possible to disable storing by passing false.
  --no-experiments-build-http-cache-location                                         Negative 'experiments-build-http-cache-location' option.
  --experiments-build-http-frozen                                                    When set, anything that would lead to a modification of the lockfile or any resource content, will result in an error.
  --no-experiments-build-http-frozen                                                 Negative 'experiments-build-http-frozen' option.
  --experiments-build-http-lockfile-location <value>                                 Location of the lockfile.
  --experiments-build-http-proxy <value>                                             Proxy configuration, which can be used to specify a proxy server to use for HTTP requests.
  --experiments-build-http-upgrade                                                   When set, resources of existing lockfile entries will be fetched and entries will be upgraded when resource content has changed.
  --no-experiments-build-http-upgrade                                                Negative 'experiments-build-http-upgrade' option.
  --experiments-cache-unaffected                                                     Enable additional in memory caching of modules that are unchanged and reference only unchanged modules.
  --no-experiments-cache-unaffected                                                  Negative 'experiments-cache-unaffected' option.
  --experiments-css                                                                  Enable css support.
  --no-experiments-css                                                               Negative 'experiments-css' option.
  --experiments-future-defaults                                                      Apply defaults of next major version.
  --no-experiments-future-defaults                                                   Negative 'experiments-future-defaults' option.
  --experiments-layers                                                               Enable module layers.
  --no-experiments-layers                                                            Negative 'experiments-layers' option.
  --experiments-lazy-compilation                                                     Compile entrypoints and import()s only when they are accessed.
  --no-experiments-lazy-compilation                                                  Negative 'experiments-lazy-compilation' option.
  --experiments-lazy-compilation-backend-client <value>                              A custom client.
  --experiments-lazy-compilation-backend-listen <value>                              A port.
  --experiments-lazy-compilation-backend-listen-host <value>                         A host.
  --experiments-lazy-compilation-backend-listen-port <value>                         A port.
  --experiments-lazy-compilation-backend-protocol <value>                            Specifies the protocol the client should use to connect to the server.
  --experiments-lazy-compilation-entries                                             Enable/disable lazy compilation for entries.
  --no-experiments-lazy-compilation-entries                                          Negative 'experiments-lazy-compilation-entries' option.
  --experiments-lazy-compilation-imports                                             Enable/disable lazy compilation for import() modules.
  --no-experiments-lazy-compilation-imports                                          Negative 'experiments-lazy-compilation-imports' option.
  --experiments-lazy-compilation-test <value>                                        Specify which entrypoints or import()ed modules should be lazily compiled. This is matched with the imported module and not the entrypoint name.
  --experiments-output-module                                                        Allow output javascript files as module source type.
  --no-experiments-output-module                                                     Negative 'experiments-output-module' option.
  --experiments-sync-web-assembly                                                    Support WebAssembly as synchronous EcmaScript Module (outdated).
  --no-experiments-sync-web-assembly                                                 Negative 'experiments-sync-web-assembly' option.
  --experiments-top-level-await                                                      Allow using top-level-await in EcmaScript Modules.
  --no-experiments-top-level-await                                                   Negative 'experiments-top-level-await' option.
  --extends <value...>                                                               Path to the configuration to be extended (only works when using webpack-cli).
  --extends-reset                                                                    Clear all items provided in 'extends' configuration. Extend configuration from another configuration (only works when using webpack-cli).
  --externals <value...>                                                             Every matched dependency becomes external. An exact matched dependency becomes external. The same string is used as external dependency.
  --externals-reset                                                                  Clear all items provided in 'externals' configuration. Specify dependencies that shouldn't be resolved by webpack, but should become dependencies of the resulting bundle. The kind of the dependency depends on `output.libraryTarget`.
  --externals-presets-electron                                                       Treat common electron built-in modules in main and preload context like 'electron', 'ipc' or 'shell' as external and load them via require() when used.
  --no-externals-presets-electron                                                    Negative 'externals-presets-electron' option.
  --externals-presets-electron-main                                                  Treat electron built-in modules in the main context like 'app', 'ipc-main' or 'shell' as external and load them via require() when used.
  --no-externals-presets-electron-main                                               Negative 'externals-presets-electron-main' option.
  --externals-presets-electron-preload                                               Treat electron built-in modules in the preload context like 'web-frame', 'ipc-renderer' or 'shell' as external and load them via require() when used.
  --no-externals-presets-electron-preload                                            Negative 'externals-presets-electron-preload' option.
  --externals-presets-electron-renderer                                              Treat electron built-in modules in the renderer context like 'web-frame', 'ipc-renderer' or 'shell' as external and load them via require() when used.
  --no-externals-presets-electron-renderer                                           Negative 'externals-presets-electron-renderer' option.
  --externals-presets-node                                                           Treat node.js built-in modules like fs, path or vm as external and load them via require() when used.
  --no-externals-presets-node                                                        Negative 'externals-presets-node' option.
  --externals-presets-nwjs                                                           Treat NW.js legacy nw.gui module as external and load it via require() when used.
  --no-externals-presets-nwjs                                                        Negative 'externals-presets-nwjs' option.
  --externals-presets-web                                                            Treat references to 'http(s)://...' and 'std:...' as external and load them via import when used (Note that this changes execution order as externals are executed before any other code in the chunk).
  --no-externals-presets-web                                                         Negative 'externals-presets-web' option.
  --externals-presets-web-async                                                      Treat references to 'http(s)://...' and 'std:...' as external and load them via async import() when used (Note that this external type is an async module, which has various effects on the execution).
  --no-externals-presets-web-async                                                   Negative 'externals-presets-web-async' option.
  --externals-type <value>                                                           Specifies the default type of externals ('amd*', 'umd*', 'system' and 'jsonp' depend on output.libraryTarget set to the same value).
  --ignore-warnings <value...>                                                       A RegExp to select the warning message.
  --ignore-warnings-file <value...>                                                  A RegExp to select the origin file for the warning.
  --ignore-warnings-message <value...>                                               A RegExp to select the warning message.
  --ignore-warnings-module <value...>                                                A RegExp to select the origin module for the warning.
  --ignore-warnings-reset                                                            Clear all items provided in 'ignoreWarnings' configuration. Ignore specific warnings.
  --infrastructure-logging-append-only                                               Only appends lines to the output. Avoids updating existing output e. g. for status messages. This option is only used when no custom console is provided.
  --no-infrastructure-logging-append-only                                            Negative 'infrastructure-logging-append-only' option.
  --infrastructure-logging-colors                                                    Enables/Disables colorful output. This option is only used when no custom console is provided.
  --no-infrastructure-logging-colors                                                 Negative 'infrastructure-logging-colors' option.
  --infrastructure-logging-debug [value...]                                          Enable/Disable debug logging for all loggers. Enable debug logging for specific loggers.
  --no-infrastructure-logging-debug                                                  Negative 'infrastructure-logging-debug' option.
  --infrastructure-logging-debug-reset                                               Clear all items provided in 'infrastructureLogging.debug' configuration. Enable debug logging for specific loggers.
  --infrastructure-logging-level <value>                                             Log level.
  --mode <value>                                                                     Enable production optimizations or development hints.
  --module-expr-context-critical                                                     Enable warnings for full dynamic dependencies.
  --no-module-expr-context-critical                                                  Negative 'module-expr-context-critical' option.
  --module-expr-context-recursive                                                    Enable recursive directory lookup for full dynamic dependencies. Deprecated: This option has moved to 'module.parser.javascript.exprContextRecursive'.
  --no-module-expr-context-recursive                                                 Negative 'module-expr-context-recursive' option.
  --module-expr-context-reg-exp [value]                                              Sets the default regular expression for full dynamic dependencies. Deprecated: This option has moved to 'module.parser.javascript.exprContextRegExp'.
  --no-module-expr-context-reg-exp                                                   Negative 'module-expr-context-reg-exp' option.
  --module-expr-context-request <value>                                              Set the default request for full dynamic dependencies. Deprecated: This option has moved to 'module.parser.javascript.exprContextRequest'.
  --module-generator-asset-data-url-encoding <value>                                 Asset encoding (defaults to base64).
  --no-module-generator-asset-data-url-encoding                                      Negative 'module-generator-asset-data-url-encoding' option.
  --module-generator-asset-data-url-mimetype <value>                                 Asset mimetype (getting from file extension by default).
  --module-generator-asset-emit                                                      Emit an output asset from this asset module. This can be set to 'false' to omit emitting e. g. for SSR.
  --no-module-generator-asset-emit                                                   Negative 'module-generator-asset-emit' option.
  --module-generator-asset-filename <value>                                          Specifies the filename template of output files on disk. You must **not** specify an absolute path here, but the path may contain folders separated by '/'! The specified path is joined with the value of the 'output.path' option to determine the location on disk.
  --module-generator-asset-output-path <value>                                       Emit the asset in the specified folder relative to 'output.path'. This should only be needed when custom 'publicPath' is specified to match the folder structure there.
  --module-generator-asset-public-path <value>                                       The 'publicPath' specifies the public URL address of the output files when referenced in a browser.
  --module-generator-asset-inline-data-url-encoding <value>                          Asset encoding (defaults to base64).
  --no-module-generator-asset-inline-data-url-encoding                               Negative 'module-generator-asset-inline-data-url-encoding' option.
  --module-generator-asset-inline-data-url-mimetype <value>                          Asset mimetype (getting from file extension by default).
  --module-generator-asset-resource-emit                                             Emit an output asset from this asset module. This can be set to 'false' to omit emitting e. g. for SSR.
  --no-module-generator-asset-resource-emit                                          Negative 'module-generator-asset-resource-emit' option.
  --module-generator-asset-resource-filename <value>                                 Specifies the filename template of output files on disk. You must **not** specify an absolute path here, but the path may contain folders separated by '/'! The specified path is joined with the value of the 'output.path' option to determine the location on disk.
  --module-generator-asset-resource-output-path <value>                              Emit the asset in the specified folder relative to 'output.path'. This should only be needed when custom 'publicPath' is specified to match the folder structure there.
  --module-generator-asset-resource-public-path <value>                              The 'publicPath' specifies the public URL address of the output files when referenced in a browser.
  --module-generator-css-exports-convention <value>                                  Specifies the convention of exported names.
  --module-generator-css-exports-only                                                Avoid generating and loading a stylesheet and only embed exports from css into output javascript files.
  --no-module-generator-css-exports-only                                             Negative 'module-generator-css-exports-only' option.
  --module-generator-css-auto-exports-convention <value>                             Specifies the convention of exported names.
  --module-generator-css-auto-exports-only                                           Avoid generating and loading a stylesheet and only embed exports from css into output javascript files.
  --no-module-generator-css-auto-exports-only                                        Negative 'module-generator-css-auto-exports-only' option.
  --module-generator-css-auto-local-ident-name <value>                               Configure the generated local ident name.
  --module-generator-css-global-exports-convention <value>                           Specifies the convention of exported names.
  --module-generator-css-global-exports-only                                         Avoid generating and loading a stylesheet and only embed exports from css into output javascript files.
  --no-module-generator-css-global-exports-only                                      Negative 'module-generator-css-global-exports-only' option.
  --module-generator-css-global-local-ident-name <value>                             Configure the generated local ident name.
  --module-generator-css-module-exports-convention <value>                           Specifies the convention of exported names.
  --module-generator-css-module-exports-only                                         Avoid generating and loading a stylesheet and only embed exports from css into output javascript files.
  --no-module-generator-css-module-exports-only                                      Negative 'module-generator-css-module-exports-only' option.
  --module-generator-css-module-local-ident-name <value>                             Configure the generated local ident name.
  --module-no-parse <value...>                                                       A regular expression, when matched the module is not parsed. An absolute path, when the module starts with this path it is not parsed.
  --module-no-parse-reset                                                            Clear all items provided in 'module.noParse' configuration. Don't parse files matching. It's matched against the full resolved request.
  --module-parser-asset-data-url-condition-max-size <value>                          Maximum size of asset that should be inline as modules. Default: 8kb.
  --module-parser-css-named-exports                                                  Use ES modules named export for css exports.
  --no-module-parser-css-named-exports                                               Negative 'module-parser-css-named-exports' option.
  --module-parser-css-auto-named-exports                                             Use ES modules named export for css exports.
  --no-module-parser-css-auto-named-exports                                          Negative 'module-parser-css-auto-named-exports' option.
  --module-parser-css-global-named-exports                                           Use ES modules named export for css exports.
  --no-module-parser-css-global-named-exports                                        Negative 'module-parser-css-global-named-exports' option.
  --module-parser-css-module-named-exports                                           Use ES modules named export for css exports.
  --no-module-parser-css-module-named-exports                                        Negative 'module-parser-css-module-named-exports' option.
  --no-module-parser-javascript-amd                                                  Negative 'module-parser-javascript-amd' option.
  --module-parser-javascript-browserify                                              Enable/disable special handling for browserify bundles.
  --no-module-parser-javascript-browserify                                           Negative 'module-parser-javascript-browserify' option.
  --module-parser-javascript-commonjs                                                Enable/disable parsing of CommonJs syntax.
  --no-module-parser-javascript-commonjs                                             Negative 'module-parser-javascript-commonjs' option.
  --module-parser-javascript-commonjs-magic-comments                                 Enable/disable parsing of magic comments in CommonJs syntax.
  --no-module-parser-javascript-commonjs-magic-comments                              Negative 'module-parser-javascript-commonjs-magic-comments' option.
  --module-parser-javascript-create-require [value]                                  Enable/disable parsing "import { createRequire } from "module"" and evaluating createRequire().
  --no-module-parser-javascript-create-require                                       Negative 'module-parser-javascript-create-require' option.
  --module-parser-javascript-dynamic-import-fetch-priority <value>                   Specifies global fetchPriority for dynamic import.
  --no-module-parser-javascript-dynamic-import-fetch-priority                        Negative 'module-parser-javascript-dynamic-import-fetch-priority' option.
  --module-parser-javascript-dynamic-import-mode <value>                             Specifies global mode for dynamic import.
  --module-parser-javascript-dynamic-import-prefetch [value]                         Specifies global prefetch for dynamic import.
  --no-module-parser-javascript-dynamic-import-prefetch                              Negative 'module-parser-javascript-dynamic-import-prefetch' option.
  --module-parser-javascript-dynamic-import-preload [value]                          Specifies global preload for dynamic import.
  --no-module-parser-javascript-dynamic-import-preload                               Negative 'module-parser-javascript-dynamic-import-preload' option.
  --module-parser-javascript-exports-presence <value>                                Specifies the behavior of invalid export names in "import ... from ..." and "export ... from ...".
  --no-module-parser-javascript-exports-presence                                     Negative 'module-parser-javascript-exports-presence' option.
  --module-parser-javascript-expr-context-critical                                   Enable warnings for full dynamic dependencies.
  --no-module-parser-javascript-expr-context-critical                                Negative 'module-parser-javascript-expr-context-critical' option.
  --module-parser-javascript-expr-context-recursive                                  Enable recursive directory lookup for full dynamic dependencies.
  --no-module-parser-javascript-expr-context-recursive                               Negative 'module-parser-javascript-expr-context-recursive' option.
  --module-parser-javascript-expr-context-reg-exp [value]                            Sets the default regular expression for full dynamic dependencies.
  --no-module-parser-javascript-expr-context-reg-exp                                 Negative 'module-parser-javascript-expr-context-reg-exp' option.
  --module-parser-javascript-expr-context-request <value>                            Set the default request for full dynamic dependencies.
  --module-parser-javascript-harmony                                                 Enable/disable parsing of EcmaScript Modules syntax.
  --no-module-parser-javascript-harmony                                              Negative 'module-parser-javascript-harmony' option.
  --module-parser-javascript-import                                                  Enable/disable parsing of import() syntax.
  --no-module-parser-javascript-import                                               Negative 'module-parser-javascript-import' option.
  --module-parser-javascript-import-exports-presence <value>                         Specifies the behavior of invalid export names in "import ... from ...".
  --no-module-parser-javascript-import-exports-presence                              Negative 'module-parser-javascript-import-exports-presence' option.
  --module-parser-javascript-import-meta                                             Enable/disable evaluating import.meta.
  --no-module-parser-javascript-import-meta                                          Negative 'module-parser-javascript-import-meta' option.
  --module-parser-javascript-import-meta-context                                     Enable/disable evaluating import.meta.webpackContext.
  --no-module-parser-javascript-import-meta-context                                  Negative 'module-parser-javascript-import-meta-context' option.
  --no-module-parser-javascript-node                                                 Negative 'module-parser-javascript-node' option.
  --module-parser-javascript-node-dirname [value]                                    Include a polyfill for the '__dirname' variable.
  --no-module-parser-javascript-node-dirname                                         Negative 'module-parser-javascript-node-dirname' option.
  --module-parser-javascript-node-filename [value]                                   Include a polyfill for the '__filename' variable.
  --no-module-parser-javascript-node-filename                                        Negative 'module-parser-javascript-node-filename' option.
  --module-parser-javascript-node-global [value]                                     Include a polyfill for the 'global' variable.
  --no-module-parser-javascript-node-global                                          Negative 'module-parser-javascript-node-global' option.
  --module-parser-javascript-reexport-exports-presence <value>                       Specifies the behavior of invalid export names in "export ... from ...". This might be useful to disable during the migration from "export ... from ..." to "export type ... from ..." when reexporting types in TypeScript.
  --no-module-parser-javascript-reexport-exports-presence                            Negative 'module-parser-javascript-reexport-exports-presence' option.
  --module-parser-javascript-require-context                                         Enable/disable parsing of require.context syntax.
  --no-module-parser-javascript-require-context                                      Negative 'module-parser-javascript-require-context' option.
  --module-parser-javascript-require-ensure                                          Enable/disable parsing of require.ensure syntax.
  --no-module-parser-javascript-require-ensure                                       Negative 'module-parser-javascript-require-ensure' option.
  --module-parser-javascript-require-include                                         Enable/disable parsing of require.include syntax.
  --no-module-parser-javascript-require-include                                      Negative 'module-parser-javascript-require-include' option.
  --module-parser-javascript-require-js                                              Enable/disable parsing of require.js special syntax like require.config, requirejs.config, require.version and requirejs.onError.
  --no-module-parser-javascript-require-js                                           Negative 'module-parser-javascript-require-js' option.
  --module-parser-javascript-strict-export-presence                                  Deprecated in favor of "exportsPresence". Emit errors instead of warnings when imported names don't exist in imported module.
  --no-module-parser-javascript-strict-export-presence                               Negative 'module-parser-javascript-strict-export-presence' option.
  --module-parser-javascript-strict-this-context-on-imports                          Handle the this context correctly according to the spec for namespace objects.
  --no-module-parser-javascript-strict-this-context-on-imports                       Negative 'module-parser-javascript-strict-this-context-on-imports' option.
  --module-parser-javascript-system                                                  Enable/disable parsing of System.js special syntax like System.import, System.get, System.set and System.register.
  --no-module-parser-javascript-system                                               Negative 'module-parser-javascript-system' option.
  --module-parser-javascript-unknown-context-critical                                Enable warnings when using the require function in a not statically analyse-able way.
  --no-module-parser-javascript-unknown-context-critical                             Negative 'module-parser-javascript-unknown-context-critical' option.
  --module-parser-javascript-unknown-context-recursive                               Enable recursive directory lookup when using the require function in a not statically analyse-able way.
  --no-module-parser-javascript-unknown-context-recursive                            Negative 'module-parser-javascript-unknown-context-recursive' option.
  --module-parser-javascript-unknown-context-reg-exp [value]                         Sets the regular expression when using the require function in a not statically analyse-able way.
  --no-module-parser-javascript-unknown-context-reg-exp                              Negative 'module-parser-javascript-unknown-context-reg-exp' option.
  --module-parser-javascript-unknown-context-request <value>                         Sets the request when using the require function in a not statically analyse-able way.
  --module-parser-javascript-url [value]                                             Enable/disable parsing of new URL() syntax.
  --no-module-parser-javascript-url                                                  Negative 'module-parser-javascript-url' option.
  --module-parser-javascript-worker [value...]                                       Specify a syntax that should be parsed as WebWorker reference. 'Abc' handles 'new Abc()', 'Abc from xyz' handles 'import { Abc } from "xyz"; new Abc()', 'abc()' handles 'abc()', and combinations are also possible. Disable or configure parsing of WebWorker syntax like new Worker() or navigator.serviceWorker.register().
  --no-module-parser-javascript-worker                                               Negative 'module-parser-javascript-worker' option.
  --module-parser-javascript-worker-reset                                            Clear all items provided in 'module.parser.javascript.worker' configuration. Disable or configure parsing of WebWorker syntax like new Worker() or navigator.serviceWorker.register().
  --module-parser-javascript-wrapped-context-critical                                Enable warnings for partial dynamic dependencies.
  --no-module-parser-javascript-wrapped-context-critical                             Negative 'module-parser-javascript-wrapped-context-critical' option.
  --module-parser-javascript-wrapped-context-recursive                               Enable recursive directory lookup for partial dynamic dependencies.
  --no-module-parser-javascript-wrapped-context-recursive                            Negative 'module-parser-javascript-wrapped-context-recursive' option.
  --module-parser-javascript-wrapped-context-reg-exp <value>                         Set the inner regular expression for partial dynamic dependencies.
  --no-module-parser-javascript-auto-amd                                             Negative 'module-parser-javascript-auto-amd' option.
  --module-parser-javascript-auto-browserify                                         Enable/disable special handling for browserify bundles.
  --no-module-parser-javascript-auto-browserify                                      Negative 'module-parser-javascript-auto-browserify' option.
  --module-parser-javascript-auto-commonjs                                           Enable/disable parsing of CommonJs syntax.
  --no-module-parser-javascript-auto-commonjs                                        Negative 'module-parser-javascript-auto-commonjs' option.
  --module-parser-javascript-auto-commonjs-magic-comments                            Enable/disable parsing of magic comments in CommonJs syntax.
  --no-module-parser-javascript-auto-commonjs-magic-comments                         Negative 'module-parser-javascript-auto-commonjs-magic-comments' option.
  --module-parser-javascript-auto-create-require [value]                             Enable/disable parsing "import { createRequire } from "module"" and evaluating createRequire().
  --no-module-parser-javascript-auto-create-require                                  Negative 'module-parser-javascript-auto-create-require' option.
  --module-parser-javascript-auto-dynamic-import-fetch-priority <value>              Specifies global fetchPriority for dynamic import.
  --no-module-parser-javascript-auto-dynamic-import-fetch-priority                   Negative 'module-parser-javascript-auto-dynamic-import-fetch-priority' option.
  --module-parser-javascript-auto-dynamic-import-mode <value>                        Specifies global mode for dynamic import.
  --module-parser-javascript-auto-dynamic-import-prefetch [value]                    Specifies global prefetch for dynamic import.
  --no-module-parser-javascript-auto-dynamic-import-prefetch                         Negative 'module-parser-javascript-auto-dynamic-import-prefetch' option.
  --module-parser-javascript-auto-dynamic-import-preload [value]                     Specifies global preload for dynamic import.
  --no-module-parser-javascript-auto-dynamic-import-preload                          Negative 'module-parser-javascript-auto-dynamic-import-preload' option.
  --module-parser-javascript-auto-exports-presence <value>                           Specifies the behavior of invalid export names in "import ... from ..." and "export ... from ...".
  --no-module-parser-javascript-auto-exports-presence                                Negative 'module-parser-javascript-auto-exports-presence' option.
  --module-parser-javascript-auto-expr-context-critical                              Enable warnings for full dynamic dependencies.
  --no-module-parser-javascript-auto-expr-context-critical                           Negative 'module-parser-javascript-auto-expr-context-critical' option.
  --module-parser-javascript-auto-expr-context-recursive                             Enable recursive directory lookup for full dynamic dependencies.
  --no-module-parser-javascript-auto-expr-context-recursive                          Negative 'module-parser-javascript-auto-expr-context-recursive' option.
  --module-parser-javascript-auto-expr-context-reg-exp [value]                       Sets the default regular expression for full dynamic dependencies.
  --no-module-parser-javascript-auto-expr-context-reg-exp                            Negative 'module-parser-javascript-auto-expr-context-reg-exp' option.
  --module-parser-javascript-auto-expr-context-request <value>                       Set the default request for full dynamic dependencies.
  --module-parser-javascript-auto-harmony                                            Enable/disable parsing of EcmaScript Modules syntax.
  --no-module-parser-javascript-auto-harmony                                         Negative 'module-parser-javascript-auto-harmony' option.
  --module-parser-javascript-auto-import                                             Enable/disable parsing of import() syntax.
  --no-module-parser-javascript-auto-import                                          Negative 'module-parser-javascript-auto-import' option.
  --module-parser-javascript-auto-import-exports-presence <value>                    Specifies the behavior of invalid export names in "import ... from ...".
  --no-module-parser-javascript-auto-import-exports-presence                         Negative 'module-parser-javascript-auto-import-exports-presence' option.
  --module-parser-javascript-auto-import-meta                                        Enable/disable evaluating import.meta.
  --no-module-parser-javascript-auto-import-meta                                     Negative 'module-parser-javascript-auto-import-meta' option.
  --module-parser-javascript-auto-import-meta-context                                Enable/disable evaluating import.meta.webpackContext.
  --no-module-parser-javascript-auto-import-meta-context                             Negative 'module-parser-javascript-auto-import-meta-context' option.
  --no-module-parser-javascript-auto-node                                            Negative 'module-parser-javascript-auto-node' option.
  --module-parser-javascript-auto-node-dirname [value]                               Include a polyfill for the '__dirname' variable.
  --no-module-parser-javascript-auto-node-dirname                                    Negative 'module-parser-javascript-auto-node-dirname' option.
  --module-parser-javascript-auto-node-filename [value]                              Include a polyfill for the '__filename' variable.
  --no-module-parser-javascript-auto-node-filename                                   Negative 'module-parser-javascript-auto-node-filename' option.
  --module-parser-javascript-auto-node-global [value]                                Include a polyfill for the 'global' variable.
  --no-module-parser-javascript-auto-node-global                                     Negative 'module-parser-javascript-auto-node-global' option.
  --module-parser-javascript-auto-reexport-exports-presence <value>                  Specifies the behavior of invalid export names in "export ... from ...". This might be useful to disable during the migration from "export ... from ..." to "export type ... from ..." when reexporting types in TypeScript.
  --no-module-parser-javascript-auto-reexport-exports-presence                       Negative 'module-parser-javascript-auto-reexport-exports-presence' option.
  --module-parser-javascript-auto-require-context                                    Enable/disable parsing of require.context syntax.
  --no-module-parser-javascript-auto-require-context                                 Negative 'module-parser-javascript-auto-require-context' option.
  --module-parser-javascript-auto-require-ensure                                     Enable/disable parsing of require.ensure syntax.
  --no-module-parser-javascript-auto-require-ensure                                  Negative 'module-parser-javascript-auto-require-ensure' option.
  --module-parser-javascript-auto-require-include                                    Enable/disable parsing of require.include syntax.
  --no-module-parser-javascript-auto-require-include                                 Negative 'module-parser-javascript-auto-require-include' option.
  --module-parser-javascript-auto-require-js                                         Enable/disable parsing of require.js special syntax like require.config, requirejs.config, require.version and requirejs.onError.
  --no-module-parser-javascript-auto-require-js                                      Negative 'module-parser-javascript-auto-require-js' option.
  --module-parser-javascript-auto-strict-export-presence                             Deprecated in favor of "exportsPresence". Emit errors instead of warnings when imported names don't exist in imported module.
  --no-module-parser-javascript-auto-strict-export-presence                          Negative 'module-parser-javascript-auto-strict-export-presence' option.
  --module-parser-javascript-auto-strict-this-context-on-imports                     Handle the this context correctly according to the spec for namespace objects.
  --no-module-parser-javascript-auto-strict-this-context-on-imports                  Negative 'module-parser-javascript-auto-strict-this-context-on-imports' option.
  --module-parser-javascript-auto-system                                             Enable/disable parsing of System.js special syntax like System.import, System.get, System.set and System.register.
  --no-module-parser-javascript-auto-system                                          Negative 'module-parser-javascript-auto-system' option.
  --module-parser-javascript-auto-unknown-context-critical                           Enable warnings when using the require function in a not statically analyse-able way.
  --no-module-parser-javascript-auto-unknown-context-critical                        Negative 'module-parser-javascript-auto-unknown-context-critical' option.
  --module-parser-javascript-auto-unknown-context-recursive                          Enable recursive directory lookup when using the require function in a not statically analyse-able way.
  --no-module-parser-javascript-auto-unknown-context-recursive                       Negative 'module-parser-javascript-auto-unknown-context-recursive' option.
  --module-parser-javascript-auto-unknown-context-reg-exp [value]                    Sets the regular expression when using the require function in a not statically analyse-able way.
  --no-module-parser-javascript-auto-unknown-context-reg-exp                         Negative 'module-parser-javascript-auto-unknown-context-reg-exp' option.
  --module-parser-javascript-auto-unknown-context-request <value>                    Sets the request when using the require function in a not statically analyse-able way.
  --module-parser-javascript-auto-url [value]                                        Enable/disable parsing of new URL() syntax.
  --no-module-parser-javascript-auto-url                                             Negative 'module-parser-javascript-auto-url' option.
  --module-parser-javascript-auto-worker [value...]                                  Specify a syntax that should be parsed as WebWorker reference. 'Abc' handles 'new Abc()', 'Abc from xyz' handles 'import { Abc } from "xyz"; new Abc()', 'abc()' handles 'abc()', and combinations are also possible. Disable or configure parsing of WebWorker syntax like new Worker() or navigator.serviceWorker.register().
  --no-module-parser-javascript-auto-worker                                          Negative 'module-parser-javascript-auto-worker' option.
  --module-parser-javascript-auto-worker-reset                                       Clear all items provided in 'module.parser.javascript/auto.worker' configuration. Disable or configure parsing of WebWorker syntax like new Worker() or navigator.serviceWorker.register().
  --module-parser-javascript-auto-wrapped-context-critical                           Enable warnings for partial dynamic dependencies.
  --no-module-parser-javascript-auto-wrapped-context-critical                        Negative 'module-parser-javascript-auto-wrapped-context-critical' option.
  --module-parser-javascript-auto-wrapped-context-recursive                          Enable recursive directory lookup for partial dynamic dependencies.
  --no-module-parser-javascript-auto-wrapped-context-recursive                       Negative 'module-parser-javascript-auto-wrapped-context-recursive' option.
  --module-parser-javascript-auto-wrapped-context-reg-exp <value>                    Set the inner regular expression for partial dynamic dependencies.
  --no-module-parser-javascript-dynamic-amd                                          Negative 'module-parser-javascript-dynamic-amd' option.
  --module-parser-javascript-dynamic-browserify                                      Enable/disable special handling for browserify bundles.
  --no-module-parser-javascript-dynamic-browserify                                   Negative 'module-parser-javascript-dynamic-browserify' option.
  --module-parser-javascript-dynamic-commonjs                                        Enable/disable parsing of CommonJs syntax.
  --no-module-parser-javascript-dynamic-commonjs                                     Negative 'module-parser-javascript-dynamic-commonjs' option.
  --module-parser-javascript-dynamic-commonjs-magic-comments                         Enable/disable parsing of magic comments in CommonJs syntax.
  --no-module-parser-javascript-dynamic-commonjs-magic-comments                      Negative 'module-parser-javascript-dynamic-commonjs-magic-comments' option.
  --module-parser-javascript-dynamic-create-require [value]                          Enable/disable parsing "import { createRequire } from "module"" and evaluating createRequire().
  --no-module-parser-javascript-dynamic-create-require                               Negative 'module-parser-javascript-dynamic-create-require' option.
  --module-parser-javascript-dynamic-dynamic-import-fetch-priority <value>           Specifies global fetchPriority for dynamic import.
  --no-module-parser-javascript-dynamic-dynamic-import-fetch-priority                Negative 'module-parser-javascript-dynamic-dynamic-import-fetch-priority' option.
  --module-parser-javascript-dynamic-dynamic-import-mode <value>                     Specifies global mode for dynamic import.
  --module-parser-javascript-dynamic-dynamic-import-prefetch [value]                 Specifies global prefetch for dynamic import.
  --no-module-parser-javascript-dynamic-dynamic-import-prefetch                      Negative 'module-parser-javascript-dynamic-dynamic-import-prefetch' option.
  --module-parser-javascript-dynamic-dynamic-import-preload [value]                  Specifies global preload for dynamic import.
  --no-module-parser-javascript-dynamic-dynamic-import-preload                       Negative 'module-parser-javascript-dynamic-dynamic-import-preload' option.
  --module-parser-javascript-dynamic-exports-presence <value>                        Specifies the behavior of invalid export names in "import ... from ..." and "export ... from ...".
  --no-module-parser-javascript-dynamic-exports-presence                             Negative 'module-parser-javascript-dynamic-exports-presence' option.
  --module-parser-javascript-dynamic-expr-context-critical                           Enable warnings for full dynamic dependencies.
  --no-module-parser-javascript-dynamic-expr-context-critical                        Negative 'module-parser-javascript-dynamic-expr-context-critical' option.
  --module-parser-javascript-dynamic-expr-context-recursive                          Enable recursive directory lookup for full dynamic dependencies.
  --no-module-parser-javascript-dynamic-expr-context-recursive                       Negative 'module-parser-javascript-dynamic-expr-context-recursive' option.
  --module-parser-javascript-dynamic-expr-context-reg-exp [value]                    Sets the default regular expression for full dynamic dependencies.
  --no-module-parser-javascript-dynamic-expr-context-reg-exp                         Negative 'module-parser-javascript-dynamic-expr-context-reg-exp' option.
  --module-parser-javascript-dynamic-expr-context-request <value>                    Set the default request for full dynamic dependencies.
  --module-parser-javascript-dynamic-harmony                                         Enable/disable parsing of EcmaScript Modules syntax.
  --no-module-parser-javascript-dynamic-harmony                                      Negative 'module-parser-javascript-dynamic-harmony' option.
  --module-parser-javascript-dynamic-import                                          Enable/disable parsing of import() syntax.
  --no-module-parser-javascript-dynamic-import                                       Negative 'module-parser-javascript-dynamic-import' option.
  --module-parser-javascript-dynamic-import-exports-presence <value>                 Specifies the behavior of invalid export names in "import ... from ...".
  --no-module-parser-javascript-dynamic-import-exports-presence                      Negative 'module-parser-javascript-dynamic-import-exports-presence' option.
  --module-parser-javascript-dynamic-import-meta                                     Enable/disable evaluating import.meta.
  --no-module-parser-javascript-dynamic-import-meta                                  Negative 'module-parser-javascript-dynamic-import-meta' option.
  --module-parser-javascript-dynamic-import-meta-context                             Enable/disable evaluating import.meta.webpackContext.
  --no-module-parser-javascript-dynamic-import-meta-context                          Negative 'module-parser-javascript-dynamic-import-meta-context' option.
  --no-module-parser-javascript-dynamic-node                                         Negative 'module-parser-javascript-dynamic-node' option.
  --module-parser-javascript-dynamic-node-dirname [value]                            Include a polyfill for the '__dirname' variable.
  --no-module-parser-javascript-dynamic-node-dirname                                 Negative 'module-parser-javascript-dynamic-node-dirname' option.
  --module-parser-javascript-dynamic-node-filename [value]                           Include a polyfill for the '__filename' variable.
  --no-module-parser-javascript-dynamic-node-filename                                Negative 'module-parser-javascript-dynamic-node-filename' option.
  --module-parser-javascript-dynamic-node-global [value]                             Include a polyfill for the 'global' variable.
  --no-module-parser-javascript-dynamic-node-global                                  Negative 'module-parser-javascript-dynamic-node-global' option.
  --module-parser-javascript-dynamic-reexport-exports-presence <value>               Specifies the behavior of invalid export names in "export ... from ...". This might be useful to disable during the migration from "export ... from ..." to "export type ... from ..." when reexporting types in TypeScript.
  --no-module-parser-javascript-dynamic-reexport-exports-presence                    Negative 'module-parser-javascript-dynamic-reexport-exports-presence' option.
  --module-parser-javascript-dynamic-require-context                                 Enable/disable parsing of require.context syntax.
  --no-module-parser-javascript-dynamic-require-context                              Negative 'module-parser-javascript-dynamic-require-context' option.
  --module-parser-javascript-dynamic-require-ensure                                  Enable/disable parsing of require.ensure syntax.
  --no-module-parser-javascript-dynamic-require-ensure                               Negative 'module-parser-javascript-dynamic-require-ensure' option.
  --module-parser-javascript-dynamic-require-include                                 Enable/disable parsing of require.include syntax.
  --no-module-parser-javascript-dynamic-require-include                              Negative 'module-parser-javascript-dynamic-require-include' option.
  --module-parser-javascript-dynamic-require-js                                      Enable/disable parsing of require.js special syntax like require.config, requirejs.config, require.version and requirejs.onError.
  --no-module-parser-javascript-dynamic-require-js                                   Negative 'module-parser-javascript-dynamic-require-js' option.
  --module-parser-javascript-dynamic-strict-export-presence                          Deprecated in favor of "exportsPresence". Emit errors instead of warnings when imported names don't exist in imported module.
  --no-module-parser-javascript-dynamic-strict-export-presence                       Negative 'module-parser-javascript-dynamic-strict-export-presence' option.
  --module-parser-javascript-dynamic-strict-this-context-on-imports                  Handle the this context correctly according to the spec for namespace objects.
  --no-module-parser-javascript-dynamic-strict-this-context-on-imports               Negative 'module-parser-javascript-dynamic-strict-this-context-on-imports' option.
  --module-parser-javascript-dynamic-system                                          Enable/disable parsing of System.js special syntax like System.import, System.get, System.set and System.register.
  --no-module-parser-javascript-dynamic-system                                       Negative 'module-parser-javascript-dynamic-system' option.
  --module-parser-javascript-dynamic-unknown-context-critical                        Enable warnings when using the require function in a not statically analyse-able way.
  --no-module-parser-javascript-dynamic-unknown-context-critical                     Negative 'module-parser-javascript-dynamic-unknown-context-critical' option.
  --module-parser-javascript-dynamic-unknown-context-recursive                       Enable recursive directory lookup when using the require function in a not statically analyse-able way.
  --no-module-parser-javascript-dynamic-unknown-context-recursive                    Negative 'module-parser-javascript-dynamic-unknown-context-recursive' option.
  --module-parser-javascript-dynamic-unknown-context-reg-exp [value]                 Sets the regular expression when using the require function in a not statically analyse-able way.
  --no-module-parser-javascript-dynamic-unknown-context-reg-exp                      Negative 'module-parser-javascript-dynamic-unknown-context-reg-exp' option.
  --module-parser-javascript-dynamic-unknown-context-request <value>                 Sets the request when using the require function in a not statically analyse-able way.
  --module-parser-javascript-dynamic-url [value]                                     Enable/disable parsing of new URL() syntax.
  --no-module-parser-javascript-dynamic-url                                          Negative 'module-parser-javascript-dynamic-url' option.
  --module-parser-javascript-dynamic-worker [value...]                               Specify a syntax that should be parsed as WebWorker reference. 'Abc' handles 'new Abc()', 'Abc from xyz' handles 'import { Abc } from "xyz"; new Abc()', 'abc()' handles 'abc()', and combinations are also possible. Disable or configure parsing of WebWorker syntax like new Worker() or navigator.serviceWorker.register().
  --no-module-parser-javascript-dynamic-worker                                       Negative 'module-parser-javascript-dynamic-worker' option.
  --module-parser-javascript-dynamic-worker-reset                                    Clear all items provided in 'module.parser.javascript/dynamic.worker' configuration. Disable or configure parsing of WebWorker syntax like new Worker() or navigator.serviceWorker.register().
  --module-parser-javascript-dynamic-wrapped-context-critical                        Enable warnings for partial dynamic dependencies.
  --no-module-parser-javascript-dynamic-wrapped-context-critical                     Negative 'module-parser-javascript-dynamic-wrapped-context-critical' option.
  --module-parser-javascript-dynamic-wrapped-context-recursive                       Enable recursive directory lookup for partial dynamic dependencies.
  --no-module-parser-javascript-dynamic-wrapped-context-recursive                    Negative 'module-parser-javascript-dynamic-wrapped-context-recursive' option.
  --module-parser-javascript-dynamic-wrapped-context-reg-exp <value>                 Set the inner regular expression for partial dynamic dependencies.
  --no-module-parser-javascript-esm-amd                                              Negative 'module-parser-javascript-esm-amd' option.
  --module-parser-javascript-esm-browserify                                          Enable/disable special handling for browserify bundles.
  --no-module-parser-javascript-esm-browserify                                       Negative 'module-parser-javascript-esm-browserify' option.
  --module-parser-javascript-esm-commonjs                                            Enable/disable parsing of CommonJs syntax.
  --